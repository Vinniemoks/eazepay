# AfriPay Universal - NGINX Configuration
# Main configuration file for API Gateway and Load Balancer

# User and worker processes
user nginx;
worker_processes auto;
pid /var/run/nginx.pid;

# Error log
error_log /var/log/nginx/error.log warn;

# Events block
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# HTTP block
http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    # Access log
    access_log /var/log/nginx/access.log main;

    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_http_version 1.1;
    gzip_types
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        text/javascript
        text/plain
        text/css
        text/xml;

    # Security headers (applied globally)
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=biometric_limit:10m rate=2r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

    # Upstream definitions for load balancing
    upstream identity_service {
        least_conn;
        server identity-service:8000 max_fails=3 fail_timeout=30s;
        # server identity-service-2:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream biometric_service {
        least_conn;
        server biometric-service:8001 max_fails=3 fail_timeout=30s;
        # server biometric-service-2:8001 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream transaction_service {
        least_conn;
        server transaction-service:8002 max_fails=3 fail_timeout=30s;
        # server transaction-service-2:8002 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream wallet_service {
        least_conn;
        server wallet-service:8003 max_fails=3 fail_timeout=30s;
        # server wallet-service-2:8003 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream ussd_gateway {
        least_conn;
        server ussd-gateway:8004 max_fails=3 fail_timeout=30s;
        # server ussd-gateway-2:8004 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream agent_service {
        least_conn;
        server agent-service:8005 max_fails=3 fail_timeout=30s;
        # server agent-service-2:8005 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Main server block
    server {
        listen 80;
        server_name api.afripay.local localhost;

        # Apply connection limits
        limit_conn conn_limit 50;

        # Security headers specific to this server
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 '{"status":"healthy","service":"api-gateway","timestamp":"$time_iso8601"}';
            add_header Content-Type application/json;
        }

        # API Gateway routing
        
        # Identity Service routes
        location ~ ^/api/(auth|users|profiles) {
            limit_req zone=auth_limit burst=20 nodelay;
            
            proxy_pass http://identity_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # Biometric Service routes
        location ~ ^/api/(biometric|enroll|verify) {
            limit_req zone=biometric_limit burst=10 nodelay;
            
            proxy_pass http://biometric_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Longer timeouts for biometric processing
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Increase body size for image uploads
            client_max_body_size 50M;
        }

        # Transaction Service routes
        location ~ ^/api/(transactions|payments|bills) {
            limit_req zone=api_limit burst=30 nodelay;
            
            proxy_pass http://transaction_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Wallet Service routes
        location ~ ^/api/(wallets|balances|limits) {
            limit_req zone=api_limit burst=50 nodelay;
            
            proxy_pass http://wallet_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # USSD Gateway routes
        location ~ ^/api/(ussd|menu) {
            limit_req zone=api_limit burst=100 nodelay;
            
            proxy_pass http://ussd_gateway;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Agent Service routes
        location ~ ^/api/(agents|terminals) {
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://agent_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Admin and monitoring routes
        location /admin/ {
            # Restrict access to admin panel
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            allow 127.0.0.1;
            deny all;

            proxy_pass http://adminer:8080/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /monitoring/ {
            # Restrict access to monitoring
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            allow 127.0.0.1;
            deny all;

            proxy_pass http://grafana:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Static files (if any)
        location /static/ {
            root /usr/share/nginx/html;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Favicon
        location /favicon.ico {
            return 204;
            access_log off;
            log_not_found off;
        }

        # Default 404 for undefined routes
        location / {
            return 404 '{"error":"Not found","message":"API endpoint not found"}';
            add_header Content-Type application/json;
        }

        # Custom error pages
        error_page 404 /404.json;
        error_page 500 502 503 504 /50x.json;

        location = /404.json {
            internal;
            return 404 '{"error":"Not found","message":"The requested resource was not found"}';
            add_header Content-Type application/json;
        }

        location = /50x.json {
            internal;
            return 500 '{"error":"Internal server error","message":"Something went wrong on our end"}';
            add_header Content-Type application/json;
        }
    }

    # HTTPS server (for production)
    server {
        listen 443 ssl http2;
        server_name api.afripay.com;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/certificate.crt;
        ssl_certificate_key /etc/nginx/ssl/private.key;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;

        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA;
        ssl_prefer_server_ciphers off;

        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # Same location blocks as HTTP server
        # ... (copy all location blocks from the HTTP server)
        
        # For now, redirect to HTTP in development
        return 302 http://$server_name$request_uri;
    }

    # Redirect HTTP to HTTPS in production
    # server {
    #     listen 80;
    #     server_name api.afripay.com;
    #     return 301 https://$server_name$request_uri;
    # }
}