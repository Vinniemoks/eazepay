services:
  # ================================
  # DATABASE SERVICES
  # ================================
  
  postgresql:
    image: postgres:15-alpine
    container_name: afripay-postgres
    environment:
      POSTGRES_DB: afripay_dev
      POSTGRES_USER: developer
      POSTGRES_PASSWORD: dev_password_2024!
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - afripay-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U developer -d afripay_dev"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: afripay-redis
    command: redis-server --appendonly yes --requirepass "redis_password_2024!"
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - afripay-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  mongodb:
    image: mongo:6
    container_name: afripay-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: mongo_password_2024!
      MONGO_INITDB_DATABASE: afripay_analytics
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./infrastructure/docker/mongodb/init.js:/docker-entrypoint-initdb.d/init.js
    networks:
      - afripay-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # ================================
  # MESSAGE QUEUE & CACHE
  # ================================

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: afripay-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: rabbitmq_password_2024!
      RABBITMQ_DEFAULT_VHOST: afripay
    ports:
      - "5673:5672"   # AMQP port
      - "15673:15672" # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./infrastructure/docker/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
      - ./infrastructure/docker/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    networks:
      - afripay-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # ================================
  # CORE MICROSERVICES
  # ================================

  identity-service:
    build: 
      context: ./services/identity-service
      dockerfile: Dockerfile
    container_name: afripay-identity
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - PORT=8000
      - DB_HOST=postgresql
      - DB_PORT=5432
      - DB_NAME=afripay_dev
      - DB_USER=developer
      - DB_PASS=dev_password_2024!
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis_password_2024!
      - JWT_SECRET=your_super_secret_jwt_key_here_change_in_production
      - BIOMETRIC_SERVICE_URL=http://biometric-service:8001
      - TRANSACTION_SERVICE_URL=http://transaction-service:8002
      - RABBITMQ_URL=amqp://admin:rabbitmq_password_2024!@rabbitmq:5672/afripay
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - afripay-network
    volumes:
      - ./services/identity-service:/app
      - /app/node_modules
      - identity_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  biometric-service:
    build: 
      context: ./services/biometric-service
      dockerfile: Dockerfile
    container_name: afripay-biometric
    ports:
      - "8001:8001"
    environment:
      - PYTHON_ENV=development
      - PORT=8001
      - DB_HOST=postgresql
      - DB_PORT=5432
      - DB_NAME=afripay_dev
      - DB_USER=developer
      - DB_PASS=dev_password_2024!
      - IDENTITY_SERVICE_URL=http://identity-service:8000
      - ENCRYPTION_KEY=your_32_character_encryption_key_here
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis_password_2024!
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - afripay-network
    volumes:
      - ./services/biometric-service:/app
      - biometric_templates:/app/templates
      - biometric_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  transaction-service:
    build: 
      context: ./services/transaction-service
      dockerfile: Dockerfile
    container_name: afripay-transaction
    ports:
      - "8002:8002"
    environment:
      - SPRING_PROFILES_ACTIVE=development
      - SERVER_PORT=8002
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql:5432/afripay_dev
      - SPRING_DATASOURCE_USERNAME=developer
      - SPRING_DATASOURCE_PASSWORD=dev_password_2024!
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_PASSWORD=redis_password_2024!
      - IDENTITY_SERVICE_URL=http://identity-service:8000
      - WALLET_SERVICE_URL=http://wallet-service:8003
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=admin
      - RABBITMQ_PASSWORD=rabbitmq_password_2024!
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      identity-service:
        condition: service_healthy
    networks:
      - afripay-network
    volumes:
      - transaction_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    restart: unless-stopped

  wallet-service:
    build: 
      context: ./services/wallet-service
      dockerfile: Dockerfile
    container_name: afripay-wallet
    ports:
      - "8003:8003"
    environment:
      - GO_ENV=development
      - PORT=8003
      - DB_HOST=postgresql
      - DB_PORT=5432
      - DB_NAME=afripay_dev
      - DB_USER=developer
      - DB_PASS=dev_password_2024!
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis_password_2024!
      - IDENTITY_SERVICE_URL=http://identity-service:8000
      - TRANSACTION_SERVICE_URL=http://transaction-service:8002
      - RABBITMQ_URL=amqp://admin:rabbitmq_password_2024!@rabbitmq:5672/afripay
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      identity-service:
        condition: service_healthy
    networks:
      - afripay-network
    volumes:
      - wallet_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  ussd-service:
    build: 
      context: ./services/ussd-service
      dockerfile: Dockerfile
    container_name: afripay-ussd
    ports:
      - "8004:8004"
    environment:
      - NODE_ENV=development
      - PORT=8004
      - DB_HOST=postgresql
      - DB_PORT=5432
      - DB_NAME=afripay_dev
      - DB_USER=developer
      - DB_PASS=dev_password_2024!
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis_password_2024!
      - IDENTITY_SERVICE_URL=http://identity-service:8000
      - TRANSACTION_SERVICE_URL=http://transaction-service:8002
      - BIOMETRIC_SERVICE_URL=http://biometric-service:8001
      - RABBITMQ_URL=amqp://admin:rabbitmq_password_2024!@rabbitmq:5672/afripay
      # Telecom operator endpoints
      - SAFARICOM_USSD_ENDPOINT=https://sandbox.safaricom.co.ke/ussd/v1/
      - AIRTEL_USSD_ENDPOINT=https://openapiuat.airtel.africa/ussd/v1/
      - TELKOM_USSD_ENDPOINT=https://developer.telkom.co.ke/ussd/v1/
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      identity-service:
        condition: service_healthy
      transaction-service:
        condition: service_healthy
    networks:
      - afripay-network
    volumes:
      - ./services/ussd-service:/app
      - /app/node_modules
      - ussd_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  agent-service:
    build: 
      context: ./services/agent-service
      dockerfile: Dockerfile
    container_name: afripay-agent
    ports:
      - "8005:8005"
    environment:
      - NODE_ENV=development
      - PORT=8005
      - DB_HOST=postgresql
      - DB_PORT=5432
      - DB_NAME=afripay_dev
      - DB_USER=developer
      - DB_PASS=dev_password_2024!
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_USER=admin
      - MONGODB_PASS=mongo_password_2024!
      - MONGODB_DB=afripay_analytics
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis_password_2024!
      - IDENTITY_SERVICE_URL=http://identity-service:8000
      - TRANSACTION_SERVICE_URL=http://transaction-service:8002
      - BIOMETRIC_SERVICE_URL=http://biometric-service:8001
      - RABBITMQ_URL=amqp://admin:rabbitmq_password_2024!@rabbitmq:5672/afripay
    depends_on:
      postgresql:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      identity-service:
        condition: service_healthy
    networks:
      - afripay-network
    volumes:
      - ./services/agent-service:/app
      - /app/node_modules
      - agent_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  web-portal:
    build:
      context: ./services/web-portal
      dockerfile: Dockerfile
    container_name: afripay-admin-portal
    ports:
      - "8080:80"
    networks:
      - afripay-network
    volumes:
      - web_portal_logs:/var/log/nginx
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  customer-portal:
    build:
      context: ./services/customer-portal
      dockerfile: Dockerfile
    container_name: afripay-customer-portal
    ports:
      - "3001:80"
    environment:
      - VITE_API_GATEWAY_URL=http://api-gateway
    networks:
      - afripay-network
    volumes:
      - customer_portal_logs:/var/log/nginx
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  agent-portal:
    build:
      context: ./services/agent-portal
      dockerfile: Dockerfile
    container_name: afripay-agent-portal
    ports:
      - "3002:80"
    environment:
      - VITE_API_GATEWAY_URL=http://api-gateway
    networks:
      - afripay-network
    volumes:
      - agent_portal_logs:/var/log/nginx
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  # ================================
  # API GATEWAY & LOAD BALANCER
  # ================================

  api-gateway:
    image: nginx:alpine
    container_name: afripay-gateway
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infrastructure/docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infrastructure/docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./infrastructure/docker/nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - identity-service
      - biometric-service
      - transaction-service
      - wallet-service
      - ussd-service
      - agent-service
      - web-portal
      - customer-portal
      - agent-portal
    networks:
      - afripay-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # ================================
  # MONITORING & OBSERVABILITY
  # ================================

  prometheus:
    image: prom/prometheus:latest
    container_name: afripay-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - afripay-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana-enterprise:latest
    container_name: afripay-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=grafana_admin_2024!
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infrastructure/docker/grafana/provisioning:/etc/grafana/provisioning
      - ./infrastructure/docker/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - afripay-network
    depends_on:
      - prometheus
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: afripay-elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - afripay-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: afripay-kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - afripay-network
    restart: unless-stopped

  # ================================
  # UTILITY SERVICES
  # ================================

  adminer:
    image: adminer:latest
    container_name: afripay-adminer
    ports:
      - "8081:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgresql
      - ADMINER_DEFAULT_USERNAME=developer
    depends_on:
      - postgresql
    networks:
      - afripay-network
    restart: unless-stopped

# ================================
# VOLUMES
# ================================

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  mongo_data:
    driver: local
  rabbitmq_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  elasticsearch_data:
    driver: local
  identity_logs:
    driver: local
  biometric_logs:
    driver: local
  biometric_templates:
    driver: local
  transaction_logs:
    driver: local
  wallet_logs:
    driver: local
  ussd_logs:
    driver: local
  agent_logs:
    driver: local
  web_portal_logs:
    driver: local
  customer_portal_logs:
    driver: local
  agent_portal_logs:
    driver: local
  nginx_logs:
    driver: local

# ================================
# NETWORKS
# ================================

networks:
  afripay-network:
    driver: bridge
    name: afripay-network
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
          ip_range: 172.20.0.0/25
        - subnet: 2001:3984:3989::/64
          gateway: 2001:3984:3989::1
          ip_range: 2001:3984:3989::2-2001:3984:3989::ffff